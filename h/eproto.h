/*	EPROTO:		Global function prototypes and declarations
			MicroEMACS 4.00

                        written by Daniel Lawrence
                        based on code by Dave G. Conroy,
                        	Steve Wilhite and George Jones
*/


/***	global function prototypes	***/


#if CALLED
extern int emacs(int argc, char *argv[]);
#endif


#if DEBUG_SEARCH
int mc_list(int f, int n);
int rmc_list(int f, int n);
void mctype_cat(char pline[], int mc_type);
#endif

extern void undo_insert(OPTYPE op_type, long count, UEOBJECT op_erand);
extern int undo_op(void);
extern void undo_dump(void);
extern void undo_zot(BUFFER *bp);
extern int undo(int f, int n);
extern int undo_delete(int f, int n);
extern int undo_list(int f, int n);
extern void *room(int);
extern void *reroom(void *, int);

#if ABBREVIATIONS
extern int ab_insert(char *sym, char *expansion);
extern char *ab_lookup(char *sym);
extern int ab_delete(char *sym);
extern int ab_clean(void);
#endif
extern BUFFER *bfind(char *bname, int cflag, int bflag);
extern BUFFER *getcbuf(char *prompt, char *defval, int createflag);
extern BUFFER *getdefb(void);
extern BUFFER *getoldb(void);
extern SCREEN *init_screen(char *, BUFFER *);
extern SCREEN *lookup_screen(char *scr_name);
extern SCREEN *index_screen(int scr_num);
extern int screen_index(SCREEN *sp);
extern int insert_screen(SCREEN *sp);
extern int select_screen(SCREEN *sp, int announce);
extern int free_screen(SCREEN *sp);
extern char *allocate(unsigned nbytes);
extern char *dolock(char *fname);
extern char *getpath(char *filespec);
extern char *gtname(char *filespec);
extern char *bytecopy(char *dst, char *src, int maxlen);
extern char *cmdstr(int c, char *seq);
extern char *copystr(char *);
extern char *complete(char *prompt, char *defval, int type, int maxlen);
extern char *envval(int i);
extern char *fixnull(char *s);
extern char *flook(char *fname, int hflag);
extern char *funval(int i);
extern char *getctext(char *rline);
extern char *getffile(char *fspec);
extern char *getfname(KEYTAB *key);
extern char *getkill(void);
extern char *getnfile(void);
extern char *getreg(char *value);
extern char *getval(char *token);
extern char *getwlist(char *buf);
extern char *gtenv(char *vname);
extern char *gtfilename(char *prompt);
extern char *gtfun(char *fname);
extern char *gtusr(char *vname);
extern char *int_asc(int i);
extern char *long_asc(long num);
extern char *ltos(int val);
extern char *makename(char *bname, char *fname);
extern char *mklower(char *str);
extern char *mkupper(char *str);
extern char *namval(int index);
extern char *timeset(void);
extern char *token(char *src, char *tok, int size);
extern char *transbind(char *skey);
extern char *trimstr(char *s);
extern char *xlat(char *source, char *lookup, char *trans);
extern char *undolock(char *fname);
extern char *regtostr(char *buf, REGION *region);
extern int lowerc(char ch);
extern int cycle_ring(int f, int n);
extern int upperc(char ch);
extern int (*fncmatch(char *fname))(void);
extern int (*getname(char *prompt))(void);
extern int asc_int(char *st);
extern int dolhello(void);
extern int dspram(void);
extern int lckerror(char *errstr);
extern int lckhello(void);
extern int xlock(char *fname);
extern int lockchk(char *fname);
extern int lockrel(void);
extern int mousehello(void);
extern int nocrypt(void);
extern int absv(int x);
extern int add_abbrev(int f, int n);
extern int del_abbrev(int f, int n);
extern int kill_abbrevs(int f, int n);
extern int ins_abbrevs(int f, int n);
extern int def_abbrevs(int f, int n);
extern int addline(BUFFER *bp, char *text);
extern int amatch(MC *mcptr, int direct, LINE **pcwline, int *pcwoff);
extern int backhunt(int f, int n);
extern int backsearch(int f, int n);
extern int biteq(int bc, EBITMAP cclmap);
extern int bktoshell(int f, int n);
extern int boundry(LINE *curline, int curoff, int dir);
extern int cclmake(char **ppatptr, MC *mcptr);
extern int checknext(int chr, int dir);
extern int clear_ring(int f, int n);
extern int delins(int dlength, char *instr, int use_rmc);
extern int desfunc(int f, int n);
extern int dispvar(int f, int n);
extern int echochar(unsigned char c);
extern int echostring(char *, int, int);
extern int eq(register unsigned char bc, register unsigned char pc);
extern long ernd(void);
extern int execkey(KEYTAB *key, int f, int n);
extern int fbound(DELTA *tbl, int jump, LINE **pcurline, int *pcuroff, int dir);
extern int fexist(char *fname);
extern int findcol(LINE *lp, int pos);
extern int fisearch(int f, int n);
#if	FLABEL
extern int fnclabel(int f, int n);
#endif
extern int forwhunt(int f, int n);
extern int forwsearch(int f, int n);
extern int getcwnum(void);
extern int getgoal(LINE *dlp);
extern int getstring(unsigned char *buf, int nbuf, int eolchar);
extern int gettwnum(void);
extern int gettyp(char *token);
extern int getkey(void);
extern int getwpos(void);
extern int get_char(void);
extern int global_var(int f, int n);
extern int is_letter(char ch);
extern int is_lower(char ch);
extern int is_num(char *st);
extern int isearch(int dir);
extern int is_upper(char ch);
extern int kinsert(int back, char c);
extern int ldelnewline(void);
extern int linstr(char *instr);
extern int liteq(LINE **curline, int *curpos, int direct, char *lstring);
extern int litmake(char **ppatptr, MC *mcptr);
extern int lnewline(void);
extern int local_var(int f, int n);
extern int lookup_color(char *sp);
extern int lover(char *ostr);
extern int mceq(unsigned char bc, MC *mt);
extern int mcscanner(MC *mcpatrn, int direct, int beg_or_end, int repeats);
extern int mcstr(void);
extern int mlprompt(char *, char *, int);
extern int movelocalpoint(int n, int *pcuroff, LINE **pcurline);
extern int nextch(LINE **pcurline, int *pcuroff, int dir);
extern int pop(BUFFER *popbuffer);
extern int qreplace(int f, int n);
extern int readpattern(char *prompt, char apat[], int srch);
#if	WINDOW_TEXT
extern void refresh_screen(SCREEN *sp);
#endif
extern int reglines(void);
extern int rename_screen(int f, int n);
extern int replaces(int kind, int f, int n);
extern int risearch(int f, int n);
extern int rmcstr(void);
extern int savematch(void);
extern int scanmore(int dir);
#if MAGIC == 0
extern int scanner(int direct, int beg_or_end, int repeats);
#endif
extern int setlower(char *ch, char *val);
extern int setlower(char *ch, char *val);
extern int setupper(char *ch, char *val);
extern int setupper(char *ch, char *val);
extern int setvar(int f, int n);
extern int sindex(char *source, char *pattern);
extern int sreplace(int f, int n);
extern int stol(char *val);
extern int svar(VDESC *var, char *value);
extern int tgetc(void);
extern int uneat(void);
extern int unlist_screen(SCREEN *sp);
extern int upscreen(int f, int n);
extern int vtinit(void);
extern int yank(int f, int n);
extern int yank_pop(int f, int n);
extern int release(char *mp);
extern int set_key(KEYTAB *key, char *name);
extern int xunlock(char *fname);
extern KEYTAB *getbind(int c);
extern LINE *lalloc(int used);
extern LINE *mouseline(EWINDOW *wp, int row);
extern long getlinenum(BUFFER *bp, LINE *sline);
extern int addkey(unsigned char * seq, int fn);
extern int addkeymap(int f, int n);
extern int adjustmode(int kind, int global);
extern int anycb(void);
extern int apro(int f, int n);
extern int backchar(int f, int n);
extern int backdel(int f, int n);
extern int backline(int f, int n);
extern int backpage(register int f, register int n);
extern int backword(int f, int n);
extern int bclear(BUFFER *bp);
extern int binary(char *key, char *(*tval)(), int tlength, int klength);
extern int bindtokey(int f, int n);
extern int buildlist(int type, char *mstring);
extern int capword(int f, int n);
extern int cex(int f, int n);
extern int cinsert(void);
extern int clean(void);
extern int clrmes(int f, int n);
extern int copyregion(int f, int n);
extern int ctlxe(int f, int n);
extern int ctlxlp(int f, int n);
extern int ctlxrp(int f, int n);
extern int ctoec(int c);
extern int ctrlg(int f, int n);
extern int cycle_screens(int f, int n);
extern void dcline(int argc, char *argv[], int firstflag);
extern int deblank(int f, int n);
extern int debug(BUFFER *bp, char *eline, int *skipflag);
extern int delbword(int f, int n);
extern int delete_screen(int f, int n);
extern int delfword(int f, int n);
extern int delgmode(int f, int n);
extern int delmode(int f, int n);
extern int delwind(int f, int n);
extern int desc_abbrevs(int f, int n);
extern int desbind(int f, int n);
extern int deskey(int f, int n);
extern int desvars(int f, int n);
extern int detab(int f, int n);
extern int dobuf(BUFFER *bp);
extern int docmd(char *cline);
extern int dofile(char *fname);
extern int ectoc(int c);
extern void edinit(char bname[]);
extern int editloop(void);
extern int endword(int f, int n);
extern int enlargewind(int f, int n);
extern int entab(int f, int n);
extern int execbuf(int f, int n);
extern int execcmd(int f, int n);
extern int execfile(int f, int n);
extern int execprg(int f, int n);
extern int execproc(int f, int n);
extern int execute(int c, int f, int n);
extern int ffclose(void);
extern int ffgetline(int *nbytes);
extern int ffputline(char buf[], int nbuf);
extern int ffropen(char *fn);
extern int ffwopen(char *fn, char *mode);
extern int fileapp(int f, int n);
extern int find_screen(int f, int n);
extern int filefind(int f, int n);
extern int filename(int f, int n);
extern int fileread(int f, int n);
extern int filesave(int f, int n);
extern int filewrite(int f, int n);
extern int fillpara(int f, int n);
extern int filter(int f, int n);
extern void findvar(char *var, VDESC *vd, int size, int scope);
extern int fmatch(char ch);
extern int forwchar(int f, int n);
extern int forwdel(int f, int n);
extern int forwline(int f, int n);
extern int forwpage(int f, int n);
extern int forwword(int f, int n);
extern int getccol(int bflg);
extern int getcmd(void);
extern int getfence(int f, int n);
extern int getfile(char fname[], int lockfl);
extern int get_key(void);
extern int getregion(REGION *rp);
extern int gotobob(int f, int n);
extern int gotobol(int f, int n);
extern int gotobop(int f, int n);
extern int gotoeob(int f, int n);
extern int gotoeol(int f, int n);
extern int gotoeop(int f, int n);
extern int gotoline(int f, int n);
extern int gotomark(int f, int n);
extern int help(int f, int n);
extern int ifile(char fname[]);
extern int indent(int f, int n);
extern int indent_region(int f, int n);
extern int insbrace(int n, int c);
extern int insfile(int f, int n);
extern int inspound(void);
extern int insspace(int f, int n);
extern int inword(void);
extern int isinword(char c);
extern int ismodeline(EWINDOW *wp, int row);
extern int istring(int f, int n);
extern int killbuffer(int f, int n);
extern int killpara(int f, int n);
extern int killregion(int f, int n);
extern int killtext(int f, int n);
extern int lchange(register int flag);
extern int ldelete(long n, int kflag);
extern int lfree(LINE *lp);
extern int linsert(int n, char c);
extern int listbuffers(int f, int n);
extern int list_screens(int f, int n);
extern int lowerregion(int f, int n);
extern int lowerword(int f, int n);
extern int lowrite(char c);
extern int macarg(char *tok);
extern int macrotokey(int f, int n);
extern int makelist(int iflag);
extern int movelocalpoint();
extern int undolist();
extern int mouse_screen(void);
extern int screenlist(int iflag);
extern int meexit(int status);
extern int meta(int f, int n);
extern int mlreply(char *prompt, char *buf, int nbuf);
extern int mlyesno(char *prompt);
extern int mouseoffset(EWINDOW *wp, LINE *lp, int col);
extern int movemd(int f, int n);
extern int movemu(int f, int n);
extern int mregdown(int f, int n);
extern int mmove(int f, int n);
extern int mregup(int f, int n);
extern int mvdnwind(int f, int n);
extern int mvupwind(int f, int n);
extern int namebuffer(int f, int n);
extern int namedcmd(int f, int n);
extern int narrow(int f, int n);
extern int newline(int f, int n);
extern int new_col_org(int f, int n);
extern int new_row_org(int f, int n);
extern int newsize(int f, int n);
extern int newwidth(int f, int n);
extern int nextarg(char *prompt, char *buffer, int size, int terminator);
extern int nextbuffer(int f, int n);
extern int nextdown(int f, int n);
extern int nextup(int f, int n);
extern int nextwind(int f, int n);
extern int nullproc(int f, int n);
extern int onlywind(int f, int n);
extern int openline(int f, int n);
extern int ostring(char *s);
extern int outstring(char *s);
extern int ovstring(int f, int n);
extern int pipecmd(int f, int n);
extern int popbuffer(int f, int n);
extern int prevwind(int f, int n);
extern int putctext(char *iline);
extern int putline(int row, int col, char buf[]);
extern int quickexit(int f, int n);
extern int quit(int f, int n);
extern int quote(int f, int n);
extern int rdonly(void);
extern int readin(char fname[], int lockfl);
extern int refresh(int f, int n);
extern int remmark(int f, int n);
extern int reposition(int f, int n);
extern int resetkey(void);
extern int resize(int f, int n);
extern int resizm(int f, int n);
extern int resterr(void);
extern int restwnd(int f, int n);
extern int savewnd(int f, int n);
extern int scwrite(int row, char *outstr, int forg, int bacg,
				int revleft, int revright);
extern int setccol(int pos);
extern int setekey(int f, int n);
extern int setfillcol(int f, int n);
extern int setgmode(int f, int n);
extern int setmark(int f, int n);
extern int setmod(int f, int n);
extern int setwlist(char *wclist);
extern int shellprog(char *cmd);
extern int showcpos(int f, int n);
extern int showfiles(int f, int n);
extern int listkeymaps(int f, int n);
extern int shrinkwind(int f, int n);
extern int spal(char *pstr);
extern int spawn(int f, int n);
extern int spawncli(int f, int n);
extern int splitwind(int f, int n);
extern int startup(char *sfname);
extern int storeproc(int f, int n);
extern int strinc(char *source, char *sub);
extern int swapmark(int f, int n);
extern int swbuffer(BUFFER *bp);
extern int tab(int f, int n);
extern int trim(int f, int n);
extern int ttclose(void);
extern int ttflush(void);
extern int ttgetc(void);
extern int ttopen(void);
extern int ttputc(int c);
extern int twiddle(int f, int n);
extern int typahead(void);
extern int unarg(void);
extern int unbindchar(int c);
extern int unbindkey(int f, int n);
extern int undent_region(int f, int n);
extern int unmark(int f, int n);
extern int upperregion(int f, int n);
extern int upperword(int f, int n);
extern int usebuffer(int f, int n);
extern int viewfile(int f, int n);
extern int vteeol(void);
extern int vtmove(int row, int col);
extern int vtputc(int c);
extern int vttidy(void);
extern int widen(int f, int n);
extern int wordcount(int f, int n);
extern int wrapword(int f, int n);
extern int writemsg(int f, int n);
extern int writeout(char *fn, char *mode);
extern int zotbuf(BUFFER *bp);
extern unsigned int chcase(register unsigned int ch);
extern unsigned int getckey(int mflag);
extern unsigned int stock(unsigned char *keyname);
#if	VARARG && VARG
extern void mlwrite(va_alist);
#else
extern void mlwrite(char *fmt, ...);
#endif
extern void ab_init(void);
extern void ab_save(char c);
extern void ab_expand(void);
extern void clist_buffer(char *name, int *cpos);
extern void clist_command(char *name, int *cpos);
extern void clist_file(char *name, int *cpos);
extern void comp_buffer(char *name, int *cpos);
extern void comp_command(char *name, int *cpos);
extern void comp_file(char *name, int *cpos);
extern void ecrypt(char *bptr, unsigned len);
extern void errormesg(char *mesg, BUFFER *bp, LINE *lp);
extern void flong_asc(char buf[], int width, long num);
extern void freewhile(WHBLOCK *wp);
extern void getdtime(char *ts);
extern void initchars(void);
extern void kdelete(void);
extern void lowercase(unsigned char *cp);
extern void mcclear(void);
extern void mlabort(char *s);
extern void mlerase(void);
extern void mlferase(void);
extern void mlforce(char *s);
extern void mlout(int c);
extern void mlputf(int s);
extern void mlputi(int i, int r);
extern void mlputli(long l, int r);
extern void mlputs(char *s);
extern void mlrquery(void);
extern void modeline(EWINDOW *wp);
extern void movecursor(int row, int col);
extern void next_kill(void);
extern void pad(char *s, int len);
extern void reeat(int c);
extern void reframe(EWINDOW *wp);
extern void reform(char *para);
extern void rmcclear(void);
extern void setbit(int bc, EBITMAP cclmap);
extern void setjtable(void);
extern void unbind_buf(BUFFER *bp);
extern void unqname(char *name);
extern void updall(EWINDOW *wp);
extern void update(int force);
extern void update_size(void);
extern void upddex(void);
extern void updext(void);
extern void updgar(void);
extern void updone(EWINDOW *wp);
extern void updpos(void);
extern void updupd(int force);
extern void upmode(void);
extern void uppercase(unsigned char *cp);
extern void upwind(void);
extern void varinit(void);
extern void varclean(UTABLE *ut);
extern void uv_init(UTABLE *ut);
extern void uv_clean(UTABLE *ut);
extern void vtfree(void);
extern void cook(void);
extern void qin(int ch);
extern void qrep(int ch);
extern EWINDOW *mousewindow(int row);
extern int wpopup(BUFFER *popbuf);

#if	CTAGS
extern int tagword(int f, int n);	/* vi-like tagging */
extern int retagword(int f, int n);	/* Try again (if redefined) */
extern int backtagword(int f, int n); /* return from tagged word */
#endif

/* some library redefinitions */

char *strrev(char *);

#include <stdlib.h>
#include <string.h>

